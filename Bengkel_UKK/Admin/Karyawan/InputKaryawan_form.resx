<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxProfile.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>