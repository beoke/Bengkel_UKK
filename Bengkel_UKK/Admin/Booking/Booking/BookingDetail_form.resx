<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>